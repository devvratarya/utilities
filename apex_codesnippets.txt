Profile p = [SELECT Id FROM Profile WHERE Name = 'System Administrator'];
User runasUser = new User(alias = 'sysadmin',
        email = 'devvrat@devvrat.com',
        LastName = 'admin',
        Username = 'system@testing.com',
        emailencodingkey = 'UTF-8',
        languagelocalekey = 'en_US',
        localesidkey = 'en_US',
        profileid = p.Id,
        country = 'United States',
        IsActive = true,
        timezonesidkey = 'America/Los_Angeles');
insert runasUser;

List<Id> profileIds = new List<Id>
{
        '00e2400000557', '00e2400000557', '00e2400000557', '00e2400000557', '00e2400000557'
}

String[] emailFilters = new String[]
{
  'example.com','sample.com'
};
----------------
Component Controllers can they inherit from parent?
I'm not sure if it's best practice or not, but you can pass the page controller into a component as an attribute.  I've done this with extensions, controllers will work the same.  Some snippets of what I've done to accomplish this are below.  In the component controller, I'm then able to access variables and methods from the page controller. --Platy IT
Component controller, defining the variable to hold the page extension:
public extRequirementTemplate extRT {get;set;}

Component, attribute to pass that extension from the page to the component:
<apex:attribute name="extRT" assignTo="{!extRT}" description="" type="extRequirementTemplate" required="false"></apex:attribute>

Page controller, define a variable for the controller itself:
public extRequirementTemplate extRT {get;set;}

public extRequirementTemplate(ApexPages.StandardController controller) {
    extRT = this;
}

In the page, pass that variable into the custom component:
<c:RequirementGroup extRT="{!extRT}"/>
---------------------

@isTest
    static  void testQAIntCtrl_save() {
        MultiStaticResourceCalloutMock qaMock = new MultiStaticResourceCalloutMock();
        qaMock.setStaticResource('http://www.qa.de', 'TEST_QA_INIT_RESULT');
        qaMock.setStaticResource('https://showroom.encoway-services.de/qaforsf/cxf/EmbeddedWebService;jsessionid=E6A53F98C9B19811AD239B32C10A1731', 'TEST_QA_SAVE_RESULT');
        qaMock.setStatusCode(200);
        qaMock.setHeader('Content-Type', 'text/xml');
        Test.setMock(HttpCalloutMock.class, qaMock);
        // check for further code in G files
    }
-----------------------------------

extract ids from list
List<SObject> results = Database.query(someSOQL);
Set<Id> resultIds = (new Map<Id,SObject>(results)).keySet();
------------------------------------------


